with base_metrics as (

    select 
        ticker,
        calendar_date,
        display_date,
        open,
        high,
        low,
        close,
        adj_open,
        adj_high,
        adj_low,
        adj_close,

        -- time-based attributes
        extract(dow from date) as day_of_week,
        extract(week from date) as week_of_year,
        extract(month from date) as month,
        extract(quarter from date) as quarter,

        -- lead functions
        lead(open, 1) over (partition by ticker order by date) as next_open,
        lead(open, 2) over (partition by ticker order by date) as next_2_open,
        lead(open, 3) over (partition by ticker order by date) as next_3_open,
        lead(open, 4) over (partition by ticker order by date) as next_4_open,

        lead(close, 1) over (partition by ticker order by date) as next_close,
        lead(close, 2) over (partition by ticker order by date) as next_2_close,
        lead(close, 3) over (partition by ticker order by date) as next_3_close,
        lead(close, 4) over (partition by ticker order by date) as next_4_close,

        lead(high, 1) over (partition by ticker order by date) as next_high,
        lead(high, 2) over (partition by ticker order by date) as next_2_high,
        lead(high, 3) over (partition by ticker order by date) as next_3_high,
        lead(high, 4) over (partition by ticker order by date) as next_4_high,

        lead(low, 1) over (partition by ticker order by date) as next_low,
        lead(low, 2) over (partition by ticker order by date) as next_2_low,
        lead(low, 3) over (partition by ticker order by date) as next_3_low,
        lead(low, 4) over (partition by ticker order by date) as next_4_low

        lead(adj_open, 1) over (partition by ticker order by date) as next_adj_open,
        lead(adj_open, 2) over (partition by ticker order by date) as next_2_adj_open,
        lead(adj_open, 3) over (partition by ticker order by date) as next_3_adj_open,
        lead(adj_open, 4) over (partition by ticker order by date) as next_4_adj_open,

        lead(adj_close, 1) over (partition by ticker order by date) as next_adj_close,
        lead(adj_close, 2) over (partition by ticker order by date) as next_2_adj_close,
        lead(adj_close, 3) over (partition by ticker order by date) as next_3_adj_close,
        lead(adj_close, 4) over (partition by ticker order by date) as next_4_adj_close,

        lead(adj_high, 1) over (partition by ticker order by date) as next_adj_high,
        lead(adj_high, 2) over (partition by ticker order by date) as next_2_adj_high,
        lead(adj_high, 3) over (partition by ticker order by date) as next_3_adj_high,
        lead(adj_high, 4) over (partition by ticker order by date) as next_4_adj_high,

        lead(adj_low, 1) over (partition by ticker order by date) as next_adj_low,
        lead(adj_low, 2) over (partition by ticker order by date) as next_2_adj_low,
        lead(adj_low, 3) over (partition by ticker order by date) as next_3_adj_low,
        lead(adj_low, 4) over (partition by ticker order by date) as next_4_adj_low 

    from {{ ref('stg_daily_prices') }}

)

, interday_metrics as (

    select
        ticker,
        calendar_date,

        -- open to open
        (next_open - open) / open as 1doo,
        (next_2_open - open) / open as 2doo,
        (next_3_open - open) / open as 3doo,
        (next_4_open - open) / open as 4doo,

        -- open to close
        (next_close - open) / open as 1doc,
        (next_2_close - open) / open as 2doc,
        (next_3_close - open) / open as 3doc,
        (next_4_close - open) / open as 4doc,

        -- open to high
        (next_high - open) / open as 1doh,
        (next_2_high - open) / open as 2doh,
        (next_3_high - open) / open as 3doh,
        (next_4_high - open) / open as 4doh,

        -- open to low
        (next_low - open) / open as 1dol,
        (next_2_low - open) / open as 2dol,
        (next_3_low - open) / open as 3dol,
        (next_4_low - open) / open as 4dol

        -- aopen to aopen
        (next_adj_open - adj_open) / adj_open as a_1doo,
        (next_2_adj_open - adj_open) / adj_open as a_2doo,
        (next_3_adj_open - adj_open) / adj_open as a_3doo,
        (next_4_adj_open - adj_open) / adj_open as a_4doo,

        -- aopen to aclose
        (next_adj_close - adj_open) / adj_open as a_1doc,
        (next_2_adj_close - adj_open) / adj_open as a_2doc,
        (next_3_adj_close - adj_open) / adj_open as a_3doc,
        (next_4_adj_close - adj_open) / adj_open as a_4doc,

        -- aopen to ahigh
        (next_adj_high - adj_open) / adj_open as a_1doh,
        (next_2_adj_high - adj_open) / adj_open as a_2doh,
        (next_3_adj_high - adj_open) / adj_open as a_3doh,
        (next_4_adj_high - adj_open) / adj_open as a_4doh,

        -- aopen to alow
        (next_adj_low - adj_open) / adj_open as a_1dol,
        (next_2_adj_low - adj_open) / adj_open as a_2dol,
        (next_3_adj_low - adj_open) / adj_open as a_3dol,
        (next_4_adj_low - adj_open) / adj_open as a_4dol

    from base_metrics

)

, rolling_counts as (

    select
        ticker,
        calendar_date,

        -- 1doo
        sum(case when 1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 1doo_pos_5d,
        sum(case when 1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 1doo_pos_10d,
        sum(case when 1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 1doo_pos_20d,
        sum(case when 1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 1doo_pos_50d,
        sum(case when 1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 1doo_pos_100d,
        sum(case when 1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 1doo_pos_200d,
       
        -- 2doo
        sum(case when 2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 2doo_pos_5d,
        sum(case when 2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 2doo_pos_10d,
        sum(case when 2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 2doo_pos_20d,
        sum(case when 2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 2doo_pos_50d,
        sum(case when 2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 2doo_pos_100d,
        sum(case when 2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 2doo_pos_200d
        
        -- 3doo
        sum(case when 3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 3doo_pos_5d,
        sum(case when 3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 3doo_pos_10d,
        sum(case when 3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 3doo_pos_20d,
        sum(case when 3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 3doo_pos_50d,
        sum(case when 3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 3doo_pos_100d,
        sum(case when 3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 3doo_pos_200d

        -- 4doo
        sum(case when 4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 4doo_pos_5d,
        sum(case when 4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 4doo_pos_10d,
        sum(case when 4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 4doo_pos_20d,
        sum(case when 4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 4doo_pos_50d,
        sum(case when 4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 4doo_pos_100d,
        sum(case when 4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 4doo_pos_200d

        -- 1doc
        sum(case when 1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 1doc_pos_5d,
        sum(case when 1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 1doc_pos_10d,
        sum(case when 1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 1doc_pos_20d,
        sum(case when 1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 1doc_pos_50d,
        sum(case when 1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 1doc_pos_100d,
        sum(case when 1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 1doc_pos_200d,

        -- 2doc
        sum(case when 2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 2doc_pos_5d,
        sum(case when 2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 2doc_pos_10d,
        sum(case when 2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 2doc_pos_20d,
        sum(case when 2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 2doc_pos_50d,
        sum(case when 2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 2doc_pos_100d,
        sum(case when 2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 2doc_pos_200d,

        -- 3doc
        sum(case when 3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 3doc_pos_5d,
        sum(case when 3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 3doc_pos_10d,
        sum(case when 3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 3doc_pos_20d,
        sum(case when 3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 3doc_pos_50d,
        sum(case when 3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 3doc_pos_100d,
        sum(case when 3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 3doc_pos_200d, 

        -- 4doc
        sum(case when 4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 4doc_pos_5d,
        sum(case when 4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 4doc_pos_10d,
        sum(case when 4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 4doc_pos_20d,
        sum(case when 4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 4doc_pos_50d,
        sum(case when 4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 4doc_pos_100d,
        sum(case when 4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 4doc_pos_200d,

        -- 1doh
        sum(case when 1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 1doh_pos_5d,
        sum(case when 1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 1doh_pos_10d,
        sum(case when 1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 1doh_pos_20d,
        sum(case when 1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 1doh_pos_50d,
        sum(case when 1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 1doh_pos_100d,
        sum(case when 1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 1doh_pos_200d,

        -- 2doh
        sum(case when 2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 2doh_pos_5d,
        sum(case when 2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 2doh_pos_10d,
        sum(case when 2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 2doh_pos_20d,
        sum(case when 2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 2doh_pos_50d,
        sum(case when 2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 2doh_pos_100d,
        sum(case when 2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 2doh_pos_200d,

        -- 3doh
        sum(case when 3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 3doh_pos_5d,
        sum(case when 3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 3doh_pos_10d,
        sum(case when 3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 3doh_pos_20d,
        sum(case when 3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 3doh_pos_50d,
        sum(case when 3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 3doh_pos_100d,
        sum(case when 3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 3doh_pos_200d, 

        -- 4doh
        sum(case when 4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 4doh_pos_5d,
        sum(case when 4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 4doh_pos_10d,
        sum(case when 4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 4doh_pos_20d,
        sum(case when 4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 4doh_pos_50d,
        sum(case when 4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 4doh_pos_100d,
        sum(case when 4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 4doh_pos_200d,

        -- 1dol
        sum(case when 1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 1dol_pos_5d,
        sum(case when 1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 1dol_pos_10d,
        sum(case when 1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 1dol_pos_20d,
        sum(case when 1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 1dol_pos_50d,
        sum(case when 1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 1dol_pos_100d,
        sum(case when 1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 1dol_pos_200d,

        -- 2dol
        sum(case when 2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 2dol_pos_5d,
        sum(case when 2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 2dol_pos_10d,
        sum(case when 2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 2dol_pos_20d,
        sum(case when 2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 2dol_pos_50d,
        sum(case when 2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 2dol_pos_100d,
        sum(case when 2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 2dol_pos_200d,

        -- 3dol
        sum(case when 3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 3dol_pos_5d,
        sum(case when 3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 3dol_pos_10d,
        sum(case when 3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 3dol_pos_20d,
        sum(case when 3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 3dol_pos_50d,
        sum(case when 3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 3dol_pos_100d,
        sum(case when 3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 3dol_pos_200d,

        -- 4dol
        sum(case when 4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as 4dol_pos_5d,
        sum(case when 4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as 4dol_pos_10d,
        sum(case when 4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as 4dol_pos_20d,
        sum(case when 4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as 4dol_pos_50d,
        sum(case when 4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as 4dol_pos_100d,
        sum(case when 4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as 4dol_pos_200d,

        -- a_1doo
        sum(case when a_1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_1doo_pos_5d,
        sum(case when a_1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_1doo_pos_10d,
        sum(case when a_1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_1doo_pos_20d,
        sum(case when a_1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_1doo_pos_50d,
        sum(case when a_1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_1doo_pos_100d,
        sum(case when a_1doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_1doo_pos_200d,

        -- a_2doo
        sum(case when a_2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_2doo_pos_5d,
        sum(case when a_2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_2doo_pos_10d,
        sum(case when a_2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_2doo_pos_20d,
        sum(case when a_2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_2doo_pos_50d,
        sum(case when a_2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_2doo_pos_100d,
        sum(case when a_2doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_2doo_pos_200d,

        -- a_3doo
        sum(case when a_3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_3doo_pos_5d,
        sum(case when a_3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_3doo_pos_10d,
        sum(case when a_3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_3doo_pos_20d,
        sum(case when a_3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_3doo_pos_50d,        
        sum(case when a_3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_3doo_pos_100d,
        sum(case when a_3doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_3doo_pos_200d,

        -- a_4doo
        sum(case when a_4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_4doo_pos_5d,
        sum(case when a_4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_4doo_pos_10d,
        sum(case when a_4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_4doo_pos_20d,        
        sum(case when a_4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_4doo_pos_50d,        
        sum(case when a_4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_4doo_pos_100d,
        sum(case when a_4doo > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_4doo_pos_200d,

        -- a_1doc
        sum(case when a_1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_1doc_pos_5d,
        sum(case when a_1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_1doc_pos_10d,
        sum(case when a_1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_1doc_pos_20d,        
        sum(case when a_1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_1doc_pos_50d,        
        sum(case when a_1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_1doc_pos_100d,
        sum(case when a_1doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_1doc_pos_200d,

        -- a_2doc
        sum(case when a_2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_2doc_pos_5d,        
        sum(case when a_2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_2doc_pos_10d,
        sum(case when a_2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_2doc_pos_20d,        
        sum(case when a_2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_2doc_pos_50d,        
        sum(case when a_2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_2doc_pos_100d,
        sum(case when a_2doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_2doc_pos_200d,

        -- a_3doc
        sum(case when a_3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_3doc_pos_5d,        
        sum(case when a_3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_3doc_pos_10d,
        sum(case when a_3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_3doc_pos_20d,        
        sum(case when a_3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_3doc_pos_50d,        
        sum(case when a_3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_3doc_pos_100d,
        sum(case when a_3doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_3doc_pos_200d,

        -- a_4doc
        sum(case when a_4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_4doc_pos_5d,        
        sum(case when a_4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_4doc_pos_10d,
        sum(case when a_4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_4doc_pos_20d,        
        sum(case when a_4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_4doc_pos_50d,        
        sum(case when a_4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_4doc_pos_100d,
        sum(case when a_4doc > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_4doc_pos_200d,

        -- a_1doh
        sum(case when a_1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_1doh_pos_5d,  
        sum(case when a_1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_1doh_pos_10d,
        sum(case when a_1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_1doh_pos_20d,        
        sum(case when a_1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_1doh_pos_50d,        
        sum(case when a_1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_1doh_pos_100d,
        sum(case when a_1doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_1doh_pos_200d,

        -- a_2doh
        sum(case when a_2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_2doh_pos_5d,        
        sum(case when a_2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_2doh_pos_10d,
        sum(case when a_2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_2doh_pos_20d,        
        sum(case when a_2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_2doh_pos_50d,        
        sum(case when a_2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_2doh_pos_100d,
        sum(case when a_2doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_2doh_pos_200d,

        -- a_3doh
        sum(case when a_3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_3doh_pos_5d,        
        sum(case when a_3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_3doh_pos_10d,
        sum(case when a_3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_3doh_pos_20d,        
        sum(case when a_3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_3doh_pos_50d,        
        sum(case when a_3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_3doh_pos_100d,
        sum(case when a_3doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_3doh_pos_200d,

        -- a_4doh
        sum(case when a_4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_4doh_pos_5d,
        sum(case when a_4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_4doh_pos_10d,
        sum(case when a_4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_4doh_pos_20d,
        sum(case when a_4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_4doh_pos_50d,
        sum(case when a_4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_4doh_pos_100d,
        sum(case when a_4doh > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_4doh_pos_200d,

        -- a_1dol
        sum(case when a_1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_1dol_pos_5d,
        sum(case when a_1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_1dol_pos_10d,
        sum(case when a_1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_1dol_pos_20d,
        sum(case when a_1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_1dol_pos_50d,
        sum(case when a_1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_1dol_pos_100d,
        sum(case when a_1dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_1dol_pos_200d,

        -- a_2dol
        sum(case when a_2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_2dol_pos_5d,
        sum(case when a_2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_2dol_pos_10d,
        sum(case when a_2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_2dol_pos_20d,
        sum(case when a_2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_2dol_pos_50d,
        sum(case when a_2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_2dol_pos_100d,
        sum(case when a_2dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_2dol_pos_200d,

        -- a_3dol
        sum(case when a_3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_3dol_pos_5d,
        sum(case when a_3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_3dol_pos_10d,
        sum(case when a_3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_3dol_pos_20d,
        sum(case when a_3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_3dol_pos_50d,
        sum(case when a_3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_3dol_pos_100d,
        sum(case when a_3dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_3dol_pos_200d,

        -- a_4dol
        sum(case when a_4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 4 preceding and current row) as a_4dol_pos_5d,
        sum(case when a_4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 9 preceding and current row) as a_4dol_pos_10d,
        sum(case when a_4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 19 preceding and current row) as a_4dol_pos_20d,
        sum(case when a_4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 49 preceding and current row) as a_4dol_pos_50d,
        sum(case when a_4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 99 preceding and current row) as a_4dol_pos_100d,
        sum(case when a_4dol > 0 then 1 else 0 end) over (partition by ticker order by date rows between 199 preceding and current row) as a_4dol_pos_200d

    from interday_metrics

)

, rolling_metrics as (

    select
        ticker,
        calendar_date,

        -- 1doo percentages
        1doo_pos_5d / 5.0 as 1doo_pct_5d,
        1doo_pos_10d / 10.0 as 1doo_pct_10d,
        1doo_pos_20d / 20.0 as 1doo_pct_20d,
        1doo_pos_50d / 50.0 as 1doo_pct_50d,
        1doo_pos_100d / 100.0 as 1doo_pct_100d,
        1doo_pos_200d / 200.0 as 1doo_pct_200d,

        -- 2doo percentages
        2doo_pos_5d / 5.0 as 2doo_pct_5d,
        2doo_pos_10d / 10.0 as 2doo_pct_10d,
        2doo_pos_20d / 20.0 as 2doo_pct_20d,
        2doo_pos_50d / 50.0 as 2doo_pct_50d,
        2doo_pos_100d / 100.0 as 2doo_pct_100d,
        2doo_pos_200d / 200.0 as 2doo_pct_200d,

        -- 3doo percentages
        3doo_pos_5d / 5.0 as 3doo_pct_5d,
        3doo_pos_10d / 10.0 as 3doo_pct_10d,
        3doo_pos_20d / 20.0 as 3doo_pct_20d,
        3doo_pos_50d / 50.0 as 3doo_pct_50d,
        3doo_pos_100d / 100.0 as 3doo_pct_100d,
        3doo_pos_200d / 200.0 as 3doo_pct_200d,

        -- 4doo percentages
        4doo_pos_5d / 5.0 as 4doo_pct_5d,
        4doo_pos_10d / 10.0 as 4doo_pct_10d,
        4doo_pos_20d / 20.0 as 4doo_pct_20d,
        4doo_pos_50d / 50.0 as 4doo_pct_50d,
        4doo_pos_100d / 100.0 as 4doo_pct_100d,
        4doo_pos_200d / 200.0 as 4doo_pct_200d,

        -- 1doc percentages
        1doc_pos_5d / 5.0 as 1doc_pct_5d,
        1doc_pos_10d / 10.0 as 1doc_pct_10d,
        1doc_pos_20d / 20.0 as 1doc_pct_20d,
        1doc_pos_50d / 50.0 as 1doc_pct_50d,
        1doc_pos_100d / 100.0 as 1doc_pct_100d,
        1doc_pos_200d / 200.0 as 1doc_pct_200d,

        -- 2doc percentages
        2doc_pos_5d / 5.0 as 2doc_pct_5d,
        2doc_pos_10d / 10.0 as 2doc_pct_10d,
        2doc_pos_20d / 20.0 as 2doc_pct_20d,
        2doc_pos_50d / 50.0 as 2doc_pct_50d,
        2doc_pos_100d / 100.0 as 2doc_pct_100d,
        2doc_pos_200d / 200.0 as 2doc_pct_200d,

        -- 3doc percentages
        3doc_pos_5d / 5.0 as 3doc_pct_5d,
        3doc_pos_10d / 10.0 as 3doc_pct_10d,
        3doc_pos_20d / 20.0 as 3doc_pct_20d,
        3doc_pos_50d / 50.0 as 3doc_pct_50d,
        3doc_pos_100d / 100.0 as 3doc_pct_100d,
        3doc_pos_200d / 200.0 as 3doc_pct_200d,

        -- 4doc percentages
        4doc_pos_5d / 5.0 as 4doc_pct_5d,
        4doc_pos_10d / 10.0 as 4doc_pct_10d,
        4doc_pos_20d / 20.0 as 4doc_pct_20d,
        4doc_pos_50d / 50.0 as 4doc_pct_50d,
        4doc_pos_100d / 100.0 as 4doc_pct_100d,
        4doc_pos_200d / 200.0 as 4doc_pct_200d,

        -- 1doh percentages
        1doh_pos_5d / 5.0 as 1doh_pct_5d,
        1doh_pos_10d / 10.0 as 1doh_pct_10d,
        1doh_pos_20d / 20.0 as 1doh_pct_20d,
        1doh_pos_50d / 50.0 as 1doh_pct_50d,
        1doh_pos_100d / 100.0 as 1doh_pct_100d,
        1doh_pos_200d / 200.0 as 1doh_pct_200d,

        -- 2doh percentages
        2doh_pos_5d / 5.0 as 2doh_pct_5d,
        2doh_pos_10d / 10.0 as 2doh_pct_10d,
        2doh_pos_20d / 20.0 as 2doh_pct_20d,
        2doh_pos_50d / 50.0 as 2doh_pct_50d,
        2doh_pos_100d / 100.0 as 2doh_pct_100d,
        2doh_pos_200d / 200.0 as 2doh_pct_200d,

        -- 3doh percentages
        3doh_pos_5d / 5.0 as 3doh_pct_5d,
        3doh_pos_10d / 10.0 as 3doh_pct_10d,
        3doh_pos_20d / 20.0 as 3doh_pct_20d,
        3doh_pos_50d / 50.0 as 3doh_pct_50d,
        3doh_pos_100d / 100.0 as 3doh_pct_100d,
        3doh_pos_200d / 200.0 as 3doh_pct_200d,

        -- 4doh percentages
        4doh_pos_5d / 5.0 as 4doh_pct_5d,
        4doh_pos_10d / 10.0 as 4doh_pct_10d,
        4doh_pos_20d / 20.0 as 4doh_pct_20d,
        4doh_pos_50d / 50.0 as 4doh_pct_50d,
        4doh_pos_100d / 100.0 as 4doh_pct_100d,
        4doh_pos_200d / 200.0 as 4doh_pct_200d,

        -- 1dol percentages
        1dol_pos_5d / 5.0 as 1dol_pct_5d,
        1dol_pos_10d / 10.0 as 1dol_pct_10d,
        1dol_pos_20d / 20.0 as 1dol_pct_20d,
        1dol_pos_50d / 50.0 as 1dol_pct_50d,
        1dol_pos_100d / 100.0 as 1dol_pct_100d,
        1dol_pos_200d / 200.0 as 1dol_pct_200d,

        -- 2dol percentages
        2dol_pos_5d / 5.0 as 2dol_pct_5d,
        2dol_pos_10d / 10.0 as 2dol_pct_10d,
        2dol_pos_20d / 20.0 as 2dol_pct_20d,
        2dol_pos_50d / 50.0 as 2dol_pct_50d,
        2dol_pos_100d / 100.0 as 2dol_pct_100d,
        2dol_pos_200d / 200.0 as 2dol_pct_200d,

        -- 3dol percentages
        3dol_pos_5d / 5.0 as 3dol_pct_5d,
        3dol_pos_10d / 10.0 as 3dol_pct_10d,
        3dol_pos_20d / 20.0 as 3dol_pct_20d,
        3dol_pos_50d / 50.0 as 3dol_pct_50d,
        3dol_pos_100d / 100.0 as 3dol_pct_100d,
        3dol_pos_200d / 200.0 as 3dol_pct_200d,

        -- 4dol percentages
        4dol_pos_5d / 5.0 as 4dol_pct_5d,
        4dol_pos_10d / 10.0 as 4dol_pct_10d,
        4dol_pos_20d / 20.0 as 4dol_pct_20d,
        4dol_pos_50d / 50.0 as 4dol_pct_50d,
        4dol_pos_100d / 100.0 as 4dol_pct_100d,
        4dol_pos_200d / 200.0 as 4dol_pct_200d,

        -- a_1doo percentages
        a_1doo_pos_5d / 5.0 as a_1doo_pct_5d,
        a_1doo_pos_10d / 10.0 as a_1doo_pct_10d,
        a_1doo_pos_20d / 20.0 as a_1doo_pct_20d,
        a_1doo_pos_50d / 50.0 as a_1doo_pct_50d,
        a_1doo_pos_100d / 100.0 as a_1doo_pct_100d,
        a_1doo_pos_200d / 200.0 as a_1doo_pct_200d,

        -- a_2doo percentages
        a_2doo_pos_5d / 5.0 as a_2doo_pct_5d,
        a_2doo_pos_10d / 10.0 as a_2doo_pct_10d,
        a_2doo_pos_20d / 20.0 as a_2doo_pct_20d,
        a_2doo_pos_50d / 50.0 as a_2doo_pct_50d,        
        a_2doo_pos_100d / 100.0 as a_2doo_pct_100d,        
        a_2doo_pos_200d / 200.0 as a_2doo_pct_200d,

        -- a_3doo percentages
        a_3doo_pos_5d / 5.0 as a_3doo_pct_5d,
        a_3doo_pos_10d / 10.0 as a_3doo_pct_10d,
        a_3doo_pos_20d / 20.0 as a_3doo_pct_20d,
        a_3doo_pos_50d / 50.0 as a_3doo_pct_50d,
        a_3doo_pos_100d / 100.0 as a_3doo_pct_100d,
        a_3doo_pos_200d / 200.0 as a_3doo_pct_200d,

        -- a_4doo percentages
        a_4doo_pos_5d / 5.0 as a_4doo_pct_5d,
        a_4doo_pos_10d / 10.0 as a_4doo_pct_10d,
        a_4doo_pos_20d / 20.0 as a_4doo_pct_20d,
        a_4doo_pos_50d / 50.0 as a_4doo_pct_50d,
        a_4doo_pos_100d / 100.0 as a_4doo_pct_100d,
        a_4doo_pos_200d / 200.0 as a_4doo_pct_200d,

        -- a_1doc percentages
        a_1doc_pos_5d / 5.0 as a_1doc_pct_5d,
        a_1doc_pos_10d / 10.0 as a_1doc_pct_10d,
        a_1doc_pos_20d / 20.0 as a_1doc_pct_20d,
        a_1doc_pos_50d / 50.0 as a_1doc_pct_50d,
        a_1doc_pos_100d / 100.0 as a_1doc_pct_100d,
        a_1doc_pos_200d / 200.0 as a_1doc_pct_200d,

        -- a_2doc percentages
        a_2doc_pos_5d / 5.0 as a_2doc_pct_5d,
        a_2doc_pos_10d / 10.0 as a_2doc_pct_10d,
        a_2doc_pos_20d / 20.0 as a_2doc_pct_20d,
        a_2doc_pos_50d / 50.0 as a_2doc_pct_50d,
        a_2doc_pos_100d / 100.0 as a_2doc_pct_100d,
        a_2doc_pos_200d / 200.0 as a_2doc_pct_200d,

        -- a_3doc percentages
        a_3doc_pos_5d / 5.0 as a_3doc_pct_5d,
        a_3doc_pos_10d / 10.0 as a_3doc_pct_10d,
        a_3doc_pos_20d / 20.0 as a_3doc_pct_20d,
        a_3doc_pos_50d / 50.0 as a_3doc_pct_50d,
        a_3doc_pos_100d / 100.0 as a_3doc_pct_100d,
        a_3doc_pos_200d / 200.0 as a_3doc_pct_200d,

        -- a_4doc percentages
        a_4doc_pos_5d / 5.0 as a_4doc_pct_5d,
        a_4doc_pos_10d / 10.0 as a_4doc_pct_10d,
        a_4doc_pos_20d / 20.0 as a_4doc_pct_20d,
        a_4doc_pos_50d / 50.0 as a_4doc_pct_50d,        
        a_4doc_pos_100d / 100.0 as a_4doc_pct_100d,
        a_4doc_pos_200d / 200.0 as a_4doc_pct_200d,

        -- a_1doh percentages
        a_1doh_pos_5d / 5.0 as a_1doh_pct_5d,
        a_1doh_pos_10d / 10.0 as a_1doh_pct_10d,
        a_1doh_pos_20d / 20.0 as a_1doh_pct_20d,
        a_1doh_pos_50d / 50.0 as a_1doh_pct_50d,
        a_1doh_pos_100d / 100.0 as a_1doh_pct_100d,
        a_1doh_pos_200d / 200.0 as a_1doh_pct_200d,

        -- a_2doh percentages
        a_2doh_pos_5d / 5.0 as a_2doh_pct_5d,
        a_2doh_pos_10d / 10.0 as a_2doh_pct_10d,
        a_2doh_pos_20d / 20.0 as a_2doh_pct_20d,
        a_2doh_pos_50d / 50.0 as a_2doh_pct_50d,        
        a_2doh_pos_100d / 100.0 as a_2doh_pct_100d,        
        a_2doh_pos_200d / 200.0 as a_2doh_pct_200d,

        -- a_3doh percentages
        a_3doh_pos_5d / 5.0 as a_3doh_pct_5d,
        a_3doh_pos_10d / 10.0 as a_3doh_pct_10d,
        a_3doh_pos_20d / 20.0 as a_3doh_pct_20d,
        a_3doh_pos_50d / 50.0 as a_3doh_pct_50d,
        a_3doh_pos_100d / 100.0 as a_3doh_pct_100d,
        a_3doh_pos_200d / 200.0 as a_3doh_pct_200d,

        -- a_4doh percentages
        a_4doh_pos_5d / 5.0 as a_4doh_pct_5d,
        a_4doh_pos_10d / 10.0 as a_4doh_pct_10d,
        a_4doh_pos_20d / 20.0 as a_4doh_pct_20d,
        a_4doh_pos_50d / 50.0 as a_4doh_pct_50d,        
        a_4doh_pos_100d / 100.0 as a_4doh_pct_100d,
        a_4doh_pos_200d / 200.0 as a_4doh_pct_200d,

        -- a_1dol percentages
        a_1dol_pos_5d / 5.0 as a_1dol_pct_5d,
        a_1dol_pos_10d / 10.0 as a_1dol_pct_10d,
        a_1dol_pos_20d / 20.0 as a_1dol_pct_20d,
        a_1dol_pos_50d / 50.0 as a_1dol_pct_50d,
        a_1dol_pos_100d / 100.0 as a_1dol_pct_100d,
        a_1dol_pos_200d / 200.0 as a_1dol_pct_200d,

        -- a_2dol percentages
        a_2dol_pos_5d / 5.0 as a_2dol_pct_5d,
        a_2dol_pos_10d / 10.0 as a_2dol_pct_10d,
        a_2dol_pos_20d / 20.0 as a_2dol_pct_20d,
        a_2dol_pos_50d / 50.0 as a_2dol_pct_50d,
        a_2dol_pos_100d / 100.0 as a_2dol_pct_100d,
        a_2dol_pos_200d / 200.0 as a_2dol_pct_200d,

        -- a_3dol percentages
        a_3dol_pos_5d / 5.0 as a_3dol_pct_5d,
        a_3dol_pos_10d / 10.0 as a_3dol_pct_10d,
        a_3dol_pos_20d / 20.0 as a_3dol_pct_20d,
        a_3dol_pos_50d / 50.0 as a_3dol_pct_50d,
        a_3dol_pos_100d / 100.0 as a_3dol_pct_100d,
        a_3dol_pos_200d / 200.0 as a_3dol_pct_200d,

        -- a_4dol percentages        
        a_4dol_pos_5d / 5.0 as a_4dol_pct_5d,
        a_4dol_pos_10d / 10.0 as a_4dol_pct_10d,
        a_4dol_pos_20d / 20.0 as a_4dol_pct_20d,
        a_4dol_pos_50d / 50.0 as a_4dol_pct_50d,
        a_4dol_pos_100d / 100.0 as a_4dol_pct_100d,
        a_4dol_pos_200d / 200.0 as a_4dol_pct_200d

    from rolling_counts

)

select
    base_metrics.*,
    interday_metrics.*,
    rolling_counts.*,
    rolling_metrics.*
    
from base_metrics
    left join interday_metrics using (ticker, calendar_date)
    left join rolling_counts using (ticker, calendar_date)
    left join rolling_metrics using (ticker, calendar_date)

order by ticker, calendar_date